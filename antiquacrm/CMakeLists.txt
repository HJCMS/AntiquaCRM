# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

###
##  \Section project main info
###
SET (PROJECTNAME "antiquacrm")
SET (DISPLAYNAME "AntiquaCRM")
SET (DESCRIPTION "A Database-Management application for Antiques dealers.")
SET (HOMEPAGEURL "https://www.hjcms.de")
SET (ANTIQUACRM_VERSION_MAJOR 0)
SET (ANTIQUACRM_VERSION_MINOR 3)
SET (ANTIQUACRM_VERSION_RELEASE 2)
SET (ANTIQUACRM_VERSION_STRING "${ANTIQUACRM_VERSION_MAJOR}.${ANTIQUACRM_VERSION_MINOR}.${ANTIQUACRM_VERSION_RELEASE}")
SET (ANTIQUACRM_VERSION_FILEOS "${ANTIQUACRM_VERSION_MAJOR},${ANTIQUACRM_VERSION_MINOR},${ANTIQUACRM_VERSION_RELEASE},0")

PROJECT(${PROJECTNAME} 
  VERSION ${ANTIQUACRM_VERSION_MAJOR}.${ANTIQUACRM_VERSION_MINOR}.${ANTIQUACRM_VERSION_RELEASE}
  DESCRIPTION ${DESCRIPTION}
  HOMEPAGE_URL ${HOMEPAGEURL}
  LANGUAGES CXX
)

###
## \Section Build System
###
SET(CMAKE_AUTOUIC OFF)
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)

## cmake --system-information | less
OPTION (ANTIQUA_LSB_INSTALL "Standard LSB Installation" ON)

###
##
## WARNING I'm using C++11 ISO/IEC 9899:2011
## The C++17 ISO/IEC 9899:2018 Requires:
##  gcc >= 8.1.0
##  LLVM clang >= 7.0.0
##  Microsoft Visual C++ VS 2019(16.8)
###
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/Modules")
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

## cUrl
FIND_PACKAGE(CURL REQUIRED libcurl)

## libqrencode
## https://github.com/fukuchi/libqrencode
FIND_PACKAGE(qrencode REQUIRED libqrencode)


SET(PROJECT_BINDINGS
 Core
 Widgets
 Sql
 Network
 Xml
 LinguistTools
 PrintSupport
)

FIND_PACKAGE(QT NAMES Qt5 REQUIRED COMPONENTS ${PROJECT_BINDINGS})
FIND_PACKAGE(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS ${PROJECT_BINDINGS})

## Required by src/i18n and QT5_CREATE_TRANSLATION
SET (LUPDATE_SCANDIRS
  ${CMAKE_CURRENT_BINARY_DIR}/src
)

###
## \Section Headers
## BUG Qt5 don't add automaticly Network,Sql,Xml Header Paths :(
###

SET (PROJECT_INCLUDE_DIRS
  ${CMAKE_CURRENT_BINARY_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}/src
  ${Qt${QT_VERSION_MAJOR}Network_INCLUDE_DIRS}
  ${Qt${QT_VERSION_MAJOR}Sql_INCLUDE_DIRS}
  ${Qt${QT_VERSION_MAJOR}Xml_INCLUDE_DIRS}
  ${Qt${QT_VERSION_MAJOR}PrintSupport_INCLUDE_DIRS}
)

ADD_SUBDIRECTORY (templates)
ADD_SUBDIRECTORY (src)

CONFIGURE_FILE (Doxyfile.cmake
  ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile
)

SET (PROJECT_DOCUMENTS
 README
 AUTHORS
 ChangeLog
 LICENSE
 TODO
)

SET (CPACK_PACKAGE_NAME ${PROJECTNAME})
SET (CPACK_PACKAGE_DESCRIPTION ${DESCRIPTION})
SET (CPACK_PACKAGE_VERSION_MAJOR ${ANTIQUACRM_VERSION_MAJOR})
SET (CPACK_PACKAGE_VERSION_MINOR ${ANTIQUACRM_VERSION_MINOR})
SET (CPACK_PACKAGE_VERSION_PATCH ${ANTIQUACRM_VERSION_RELEASE})
SET (CPACK_PACKAGE_HOMEPAGE_URL ${HOMEPAGEURL})
SET (CPACK_RESOURCE_FILE_LICENSE LICENSE)
SET (CPACK_RESOURCE_FILE_README README)

IF (ANTIQUA_LSB_INSTALL)
  INSTALL (FILES ${PROJECT_DOCUMENTS}
    DESTINATION ${CMAKE_INSTALL_PREFIX}/share/${PROJECTNAME}
    COMPONENT data
  )
ELSE (ANTIQUA_LSB_INSTALL)
  INSTALL (FILES ${PROJECT_DOCUMENTS}
    DESTINATION ${CMAKE_INSTALL_PREFIX}/
    COMPONENT data
  )
ENDIF (ANTIQUA_LSB_INSTALL)

##EOF
