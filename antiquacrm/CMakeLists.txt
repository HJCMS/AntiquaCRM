# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

###
##  \Section project main info
###
SET (PROJECTNAME "antiquacrm")
SET (DISPLAYNAME "Antiqua CRM")
SET (DESCRIPTION "A Qt5/C++ based CRM with PSQL bindings for antiques dealers.")
SET (HOMEPAGEURL "https://antiquacrm.hjcms.de")
SET (ANTIQUACRM_VERSION_MAJOR 0)
SET (ANTIQUACRM_VERSION_MINOR 0)
SET (ANTIQUACRM_VERSION_RELEASE 2)
SET (ANTIQUACRM_VERSION_STRING "0.0.2")
# If Git is installed and a '.git' directory is found,
# we append the Git revision to ANTIQUACRM_VERSION_STRING
IF(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/.git")
  FIND_PROGRAM (GIT_EXECUTABLE NAMES git)
  IF (GIT_EXECUTABLE)
    SET (antiquacrm_git_revision "")
    MESSAGE (STATUS "Found git: ${GIT_EXECUTABLE}")
    EXECUTE_PROCESS (COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
      OUTPUT_VARIABLE antiquacrm_git_revision
      OUTPUT_STRIP_TRAILING_WHITESPACE)
    SET (ANTIQUACRM_VERSION_STRING "${ANTIQUACRM_VERSION_STRING}.git(${antiquacrm_git_revision})")
  ENDIF (GIT_EXECUTABLE)
ENDIF (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/.git")

PROJECT(${PROJECTNAME} 
  VERSION ${ANTIQUACRM_VERSION_MAJOR}.${ANTIQUACRM_VERSION_MINOR}.${ANTIQUACRM_VERSION_RELEASE}
  DESCRIPTION ${DESCRIPTION}
  HOMEPAGE_URL ${HOMEPAGEURL}
  LANGUAGES CXX
)

###
## \Section CPack
###
SET (CPACK_RESOURCE_FILE_LICENSE LICENSE)
SET (CPACK_RESOURCE_FILE_README README)

###
## \Section Build System
###
SET(CMAKE_AUTOUIC OFF)
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)

###
##
## WARNING I'm using C++11 ISO/IEC 9899:2011
## The C++17 ISO/IEC 9899:2018 Requires:
##  gcc >= 8.1.0
##  LLVM clang >= 7.0.0
##  Microsoft Visual C++ VS 2019(16.8)
###
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

## Enable Developement Extensions
OPTION (ENABLE_DEVEL_BUILD "Enable Developement (ON/OFF)" OFF)
IF (ENABLE_DEVEL_BUILD)
  ADD_DEFINITIONS (-DHJCMS_DEVEL_BUILD)
ENDIF (ENABLE_DEVEL_BUILD)

SET(PROJECT_BINDINGS
 Core
 Widgets
 Sql
 Network
 Xml
 LinguistTools
)

FIND_PACKAGE(QT NAMES Qt5 REQUIRED COMPONENTS ${PROJECT_BINDINGS})
FIND_PACKAGE(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS ${PROJECT_BINDINGS})

###
## \Section Headers
## BUG Qt5 does not automaticly add Network,Sql Header Paths
###

SET (PROJECT_INCLUDE_DIRS
  ${CMAKE_CURRENT_BINARY_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}/src
  ${Qt${QT_VERSION_MAJOR}Network_INCLUDE_DIRS}
  ${Qt${QT_VERSION_MAJOR}Sql_INCLUDE_DIRS}
)

ADD_SUBDIRECTORY (src)

##############################################################
## LGPL/GPL3 Exceptions
##############################################################

SET (PROJECT_DOCUMENTS
 README
 AUTHORS
 ChangeLog
 LICENCE
 TODO
)

INSTALL (FILES
  ${PROJECT_DOCUMENTS}
  DESTINATION share/${CMAKE_PROJECT_NAME}
  COMPONENT data
)

##EOF
