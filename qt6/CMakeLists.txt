# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
#
# SPDX-FileCopyrightText: 2024 Juergen Heinemann https://www.hjcms.de
#
# SPDX-License-Identifier: MIT
#
CMAKE_MINIMUM_REQUIRED(VERSION 3.19 FATAL_ERROR)

###
# \Section project main info
###
SET (PROJECTNAME "antiquacrm")
SET (DISPLAYNAME "AntiquaCRM")
SET (DESCRIPTION "Application for Managing antiquarian Books")
SET (HOMEPAGEURL "https://www.hjcms.de")
SET (ANTIQUACRM_DOMAIN_SCOPE "de.hjcms.${PROJECTNAME}")
SET (ANTIQUACRM_VERSION_MAJOR 1)
SET (ANTIQUACRM_VERSION_MINOR 1)
SET (ANTIQUACRM_VERSION_RELEASE 2)
SET (ANTIQUACRM_VERSION_STRING "${ANTIQUACRM_VERSION_MAJOR}.${ANTIQUACRM_VERSION_MINOR}.${ANTIQUACRM_VERSION_RELEASE}")
## @see src/antiquacrm.rc
SET (ANTIQUACRM_VERSION_FILEOS "${ANTIQUACRM_VERSION_MAJOR},${ANTIQUACRM_VERSION_MINOR},${ANTIQUACRM_VERSION_RELEASE},0")
### Required for Package building
## https://www.rfc-editor.org/rfc/rfc4122.html#section-4.3
SET (RFC4122_DNS_NAMESPACE 6ba7b810-9dad-11d1-80b4-00c04fd430c8)
STRING (UUID ANTIQUACRM_DNSID NAMESPACE ${RFC4122_DNS_NAMESPACE} NAME "hjcms.de" TYPE SHA1 UPPER)
SET (RFC4122_URL_NAMESPACE 6ba7b811-9dad-11d1-80b4-00c04fd430c8)
STRING (UUID ANTIQUACRM_URLID NAMESPACE ${RFC4122_URL_NAMESPACE} NAME "https://hjcms.de" TYPE SHA1 UPPER)
SET (RFC4122_ISO_NAMESPACE 6ba7b812-9dad-11d1-80b4-00c04fd430c8)
STRING (UUID ANTIQUACRM_APPID NAMESPACE ${RFC4122_ISO_NAMESPACE} NAME "AntiquaCRM" TYPE SHA1 UPPER)

ENABLE_LANGUAGE(CXX)

PROJECT(${PROJECTNAME} 
  VERSION ${ANTIQUACRM_VERSION_MAJOR}.${ANTIQUACRM_VERSION_MINOR}.${ANTIQUACRM_VERSION_RELEASE}
  DESCRIPTION ${DESCRIPTION}
  HOMEPAGE_URL ${HOMEPAGEURL}
  LANGUAGES CXX
)

## Enables some Development options and tracing
OPTION (ANTIQUA_DEVELOPMENT "Enable development macro code" OFF)
OPTION (WITH_ANTIQUACMD "With antiquacmd cron application." OFF)

IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/custom-config.cmake)
  MESSAGE(STATUS "Using Custom config")
  include(${CMAKE_CURRENT_SOURCE_DIR}/custom-config.cmake)
ENDIF()

CONFIGURE_FILE (version.txt.cmake
  ${CMAKE_CURRENT_SOURCE_DIR}/version.txt
)

## Not changed in custom-config, then set it to default
IF(NOT ANTIQUACRM_STD_STANDARD)
  ## https://doc.qt.io/qt-6/supported-platforms.html
  SET (ANTIQUACRM_STD_STANDARD 11)
ENDIF()

###
## \Section Build System
##
SET(CMAKE_CXX_STANDARD ${ANTIQUACRM_STD_STANDARD})
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOUIC OFF)
SET(CMAKE_AUTORCC OFF)
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_CONFIGURATION_TYPES Debug Release MinSizeRel)
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -W -Wall -Wno-implicit-fallthrough -Werror")

IF (ANTIQUA_DEVELOPMENT)
  IF (CMAKE_HOST_LINUX)
    ADD_DEFINITIONS (-DANTIQUA_DEVELOPMENT)
    SET (CMAKE_BUILD_TYPE "Debug")
    SET (QT_VERSION_STRING "6.2.4")
    IF(QT_HOST_PREFIX)
      SET (_INSTALL_PREFIX ${QT_HOST_PREFIX})
    ELSE()
      SET (_INSTALL_PREFIX "$ENV{HOME}/Programme/Qt/${QT_VERSION_STRING}/gcc_64")
    ENDIF()
    SET (QT_CMAKE_MODULE_DIR "${_INSTALL_PREFIX}/lib/cmake")
    LIST(APPEND CMAKE_MODULE_PATH ${QT_CMAKE_MODULE_DIR})
    SET (QT_QMAKE_EXECUTABLE "${_INSTALL_PREFIX}/bin/qmake")
    SET (CMAKE_PREFIX_PATH ${_INSTALL_PREFIX})
    MESSAGE(STATUS "CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH}")
    ## Project
    SET (ANTIQUACRM_DATA_TARGET "${CMAKE_CURRENT_SOURCE_DIR}/src/data")
    SET (ANTIQUACRM_PLUGIN_TARGET "${CMAKE_CURRENT_BINARY_DIR}/src/plugins/antiquacrm")
    SET (ANTIQUACRM_TRANSLATION_TARGET "${CMAKE_CURRENT_BINARY_DIR}/src/i18n")
  ENDIF (CMAKE_HOST_LINUX)
ELSE(ANTIQUA_DEVELOPMENT)
  IF (CMAKE_HOST_WIN32)
    SET (CMAKE_BUILD_TYPE "Release")
    SET (ANTIQUACRM_DATA_TARGET "data")
    SET (ANTIQUACRM_PLUGIN_TARGET "plugins/antiquacrm")
    SET (ANTIQUACRM_TRANSLATION_TARGET "i18n")
    SET (ANTIQUACRM_INNOSETUP_BINDIR "${CMAKE_CURRENT_BINARY_DIR}")
    SET (ANTIQUACRM_INNOSETUP_SRCDIR "${CMAKE_CURRENT_SOURCE_DIR}")
  ELSE (CMAKE_HOST_WIN32)
    SET (ANTIQUACRM_DATA_TARGET "${CMAKE_INSTALL_PREFIX}/share/${PROJECTNAME}/data")
    SET (ANTIQUACRM_PLUGIN_TARGET "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}/antiquacrm/plugins")
    SET (ANTIQUACRM_TRANSLATION_TARGET "${CMAKE_INSTALL_PREFIX}/share/${PROJECTNAME}/i18n")
  ENDIF (CMAKE_HOST_WIN32)
ENDIF (ANTIQUA_DEVELOPMENT)

## https://ccache.dev/
FIND_PROGRAM (CCACHE_EXECUTABLE NAMES ccache)
IF (CCACHE_EXECUTABLE)
  MESSAGE (STATUS "Compiler ccache found.")
  SET_PROPERTY (GLOBAL PROPERTY RULE_LAUNCH_COMPILE ${CCACHE_EXECUTABLE})
  SET_PROPERTY (GLOBAL PROPERTY RULE_LAUNCH_LINK ${CCACHE_EXECUTABLE})
ENDIF ()

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/Modules)
MESSAGE(STATUS "CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}")

## Zlib
FIND_PACKAGE(ZLIB REQUIRED)
IF (NOT ZLIB_FOUND)
 MESSAGE (FATAL_ERROR "Requires gzip compression for Network connections!")
ELSE (NOT ZLIB_FOUND)
 MESSAGE (STATUS "Found ZLIB: ${ZLIB_LIBRARIES}")
ENDIF (NOT ZLIB_FOUND)

## libqrencode
## https://github.com/fukuchi/libqrencode
FIND_PACKAGE(QRENCODE REQUIRED)
IF (QRENCODE_FOUND)
 MESSAGE (STATUS "Found QRENCODE: ${QRENCODE_LIBRARIES}")
ELSE (QRENCODE_FOUND)
 MESSAGE (FATAL_ERROR "libqrencode, QR Code library not found!")
ENDIF (QRENCODE_FOUND)

SET(PROJECT_BINDINGS
 Core
 Widgets
 Sql
 Network
 Xml
 Charts
 PrintSupport
)

IF (CMAKE_HOST_UNIX)
  FIND_PACKAGE(X11)
  IF(X11_FOUND)
    MESSAGE (STATUS "Found X11")
    MESSAGE (STATUS "Enable IPC DBus Support")
    SET(PROJECT_BINDINGS ${PROJECT_BINDINGS} DBus)
  ENDIF(X11_FOUND)
  FIND_PACKAGE(Vulkan)
  IF(Vulkan_FOUND)
    MESSAGE (STATUS "Found Vulkan: ${Vulkan_LIBRARIES}")
  ENDIF()
ENDIF (CMAKE_HOST_UNIX)

FIND_PACKAGE(Qt6 REQUIRED COMPONENTS ${PROJECT_BINDINGS})

###
## \Section Includes
###
SET (ANTIQUACRM_INCLUDE_DIRS
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${ZLIB_INCLUDE_DIRS}
)

###
## \Section SubTargets
###
ADD_SUBDIRECTORY (Modules)
ADD_SUBDIRECTORY (templates)
ADD_SUBDIRECTORY (src)

##EOF
