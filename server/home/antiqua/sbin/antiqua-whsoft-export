#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
##################################################################################
# This file is part of the HJCMS Project
#
# Copyright (C) Juergen Heinemann http://www.hjcms.de, (C) 2007-2022
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
##################################################################################

set +x

test -e $HOME/.config/postgres/servercfg.bash || {
  echo "FATAL: Can not read Configuration"
  exit 1
}

chmod -c 0600 $HOME/.config/postgres/servercfg.bash

source $HOME/.config/postgres/servercfg.bash

## Debug mode
_disable_upload=true

## Ausgabe Verzeichnis
_output_target=$HOME/Downloads

# Standard Ausgabename für Temporäre Daten in ~/.cache erstellen!
_tempdir=$HOME/.cache

_output="catalog_${_date}_UTF8.csv"

_catalog_sqlfile=$HOME/.config/HJCMS/whsoft-catalog-export.sql

_catalog_header=$HOME/.config/HJCMS/whsoft-catalog-export.header

#####################################################################

if test ! -x /usr/bin/curl ; then
  echo "cUrl application is not installed!"
  exit 1
fi

if test ! -x /usr/bin/zip ; then
  echo "zip compression application is not installed!"
  exit 1
fi

if test ! -e ${_catalog_sqlfile} ; then
  echo "SQL File not found!"
  echo "- ${_catalog_sqlfile} "
  exit 1
fi

if test ! -e ${_catalog_header} ; then
  echo "Header File not found!"
  echo "- ${_catalog_header} "
  exit 1
fi

if test ! -d ${_output_target} ; then
  echo "Invalid output target!"
  exit 1
fi

__init_tempfile

__init_sql_enviroment

cd ${_output_target}

rm -f ${_tempdir}/whsoft_trace.log
touch ${_tempdir}/whsoft_trace.log

psql \
  --csv \
  --no-align \
  --echo-hidden \
  --tuples-only \
  --field-separator="`printf '\t'`" \
  --log-file=${_tempdir}/whsoft_trace.log \
  --output=${_tempdir}/whsoft_export.sql < ${_catalog_sqlfile}

if test -s ${_tempdir}/whsoft_export.sql ; then

  head -1 ${_catalog_header}  > ${_output_target}/${_output}
  cat ${_tempdir}/whsoft_export.sql >> ${_output_target}/${_output}

  _status=$?
  if test ${_status} -gt 0 ; then
    echo "Script ENCODING Check with errors!"
    exit 1
  fi

  rm -f ${_tempdir}/whsoft_export.sql
fi

_status=$?
if test ${_status} -gt 0 ; then
  echo "Script ending with errors"
  exit 1
fi

if test ${_disable_upload} ; then
  echo "Done without Upload"
  ls -l ${_output_target}/${_output}
  exit 0
fi

pushd ${_output_target}
  ## Aufräumen und zippen
  cp ${_output} catalog_utf8.csv
  chmod 0644 ${_output}
  rm -f *.zip
  zip -9 -o catalog.zip ${_output} 1> /dev/null
  chmod 0644 catalog.zip
  rm -f catalog_utf8.csv

  ## Upload
  if test -e catalog.zip ; then
    _upload_file=catalog.zip
    _whsoft_apiKey=""
    _whsoft_remote=https://www.buchfreund.de/verkaeufer/api/${_whsoft_apiKey}/upload-daten
    curl --silent --ssl-reqd --tlsv1.2 \
      -X POST "${_whsoft_remote}" \
      -H "Accept: */*" \
      -H "Cache-Control: no-cache" \
      -H "Content-Type: multipart/form-data" \
      -F "boundary=upload" \
      -F "file=@${_upload_file}" \
      --dump-header ${_tempdir}/whsoft_dump.header \
      --output ${_tempdir}/whsoft_catalog.json

    if test $? -ne 0 ; then
      echo "Curl finished with errors!"
      echo "Check: ${_tempdir}/whsoft_catalog.json"
      exit 1
    fi
  fi
popd

##
## EOF
##
