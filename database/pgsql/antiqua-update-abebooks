#!/usr/bin/env perl
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8

=head1 NAME
##################################################################################
# This file is part of the HJCMS Project
#
# Copyright (C) Juergen Heinemann http://www.hjcms.de, (C) 2007-2022
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
##################################################################################

 antiqua-update-abebooks

 ABHÃ„NGIGKEITEN:
  perl-DBD-Pg
  perl-XML-LibXML
  curl

 WARNUNG
  Die Datenbank arbeitet mit UTF-8 aber Abebooks erwartet ISO-8859-1.
  Dehalb muss die Ausgabe in den richtigen Zeichensatz konvertiert werden!

=cut

use strict;
use warnings;
use DBD::Pg;
use XML::LibXML;

## Configuration
my $_APPL_NAME = "antiqua-update-abebooks";
my $_PG_USER = $ENV{USER};
my $_PICTURE_URL = "https://www.buchfreund.de/covers/9090";
my $_XML_CHARSET = "ISO-8859-1";
my $_CACHE_DIR = $ENV{HOME} . "/.cache";
my $_SQL_QUERY = $ENV{HOME} . "/.config/HJCMS/${_APPL_NAME}.sql";
my $_API_USER = "";
my $_API_KEY = "";
print "configure first!\n"
exit(0);

=begin postUpdate
  Sende mit Curl die POST Daten an den Abebooks Update Server!
  URL:  https://orderupdate.abebooks.com
  Port: 10003
=cut
sub postUpdate {
  my $body = shift;
  my @args = ("curl", "--silent", "--show-error", "--ipv4", "--ssl-reqd", "--tlsv1.2",
    "--request", "POST", "https://inventoryupdate.abebooks.com:10027",
    "--header", "Accept-Language: de;q=0.8, en;q=0.7",
    "--header", "Accept: application/xml,text/*;q=0.1",
    "--header", "Content-Type: application/xml; charset=$_XML_CHARSET",
    "--header", "Cache-Control: no-cache",
    "--trace", "${_CACHE_DIR}/${_APPL_NAME}.trace",
    "--dump-header", "${_CACHE_DIR}/${_APPL_NAME}.header",
    "--output", "${_CACHE_DIR}/${_APPL_NAME}.response",
    "--data", "$body"
  );
  if (system(@args) != 0) {
    print "Curl finished with errors! ($?)\n";
    return 1;
  }
  return 0;
};

my $dbc = DBI->connect("dbi:Pg:service=$_PG_USER",'', '',
  {AutoCommit => 0, RaiseError => 1, PrintError => 1, ReadOnly => 1});

my $_statement = "";
open(FH, '<:encoding(UTF-8)', $_SQL_QUERY) or die $!;
while(<FH>){
  $_statement .= $_;
}
close(FH);

my $doc = new XML::LibXML->createDocument("1.0",$_XML_CHARSET);
my $root = $doc->createElement("inventoryUpdateRequest");
$root->setAttribute("version","1.0");
$doc->setDocumentElement($root);
my $action = $doc->createElement("action");
$action->setAttribute("name","bookupdate");
my $username = $doc->createElement("username");
$username->appendChild($doc->createTextNode($_API_USER));
$action->appendChild($username);
my $apikey = $doc->createElement("password");
$apikey->appendChild($doc->createTextNode($_API_KEY));
$action->appendChild($apikey);
$root->appendChild($action);

my $query = $dbc->prepare($_statement);
if(!defined $query) {
  print "SQL-Connection error!\n";
  exit(1);
}

$query->execute();
my $ref = $query->fetchall_arrayref({});
$query->finish;

if($query->rows < 1)
{
  print "SQL-Query: Nothing todo!\n";
  $dbc->disconnect;
  exit(0);
}

sub childNode {
  my $name = shift;
  my $value = shift;
  my $child = $doc->createElement($name);
  $child->appendChild($doc->createTextNode($value));
  return $child;
};

sub childAttributeNode {
  my $name = shift;
  my $value = shift;
  my $attr = shift;
  my $avalue = shift;
  my $child = $doc->createElement($name);
  $child->setAttribute($attr,$avalue);
  $child->appendChild($doc->createTextNode($value));
  return $child;
};

my $parent = $doc->createElement("AbebookList");
$root->appendChild($parent);

foreach my $row (@{$ref}) {
  my $book = $doc->createElement("Abebook");
  $parent->appendChild($book);

  $book->appendChild(childNode("transactionType","UPDATE"));
  $book->appendChild(childNode("vendorBookID",$row->{vendorbookid}));
  $book->appendChild(childNode("quantity",$row->{quantity}));

  if($row->{author}) {
    $book->appendChild(childNode("author",$row->{author}));
  }

  if($row->{title}) {
    $book->appendChild(childNode("title",$row->{title}));
  }

  if($row->{publisher}) {
    $book->appendChild(childNode("publisher",$row->{publisher}));
  }

  if($row->{year}) {
    $book->appendChild(childNode("publishYear",$row->{year}));
  }

  if($row->{price}) {
    $book->appendChild(childAttributeNode("price",$row->{price},"currency","EUR"));
  }

  if($row->{edition}) {
    $book->appendChild(childNode("edition","$row->{edition}. Auflage"));
  }

  if($row->{subject}) {
    $book->appendChild(childNode("subject",$row->{subject}));
  }

  if($row->{bindingtext}) {
    $book->appendChild(childNode("bindingText",$row->{bindingtext}));
  }

  if($row->{bookcondition}) {
    $book->appendChild(childNode("bookCondition",$row->{bookcondition}));
  }

  if($row->{jacketcondition}) {
    $book->appendChild(childNode("jacketCondition",$row->{jacketcondition}));
  }

  if($row->{bind} && $row->{bind_attr}) {
    $book->appendChild(childAttributeNode(
        "binding",$row->{bind},
        "type",$row->{bind_attr})
    );
  }

  if($row->{inscriptiontype}) {
    $book->appendChild(childNode("inscriptionType",$row->{inscriptiontype}));
  }

  if($row->{isbn}) {
    $book->appendChild(childNode("isbn",$row->{isbn}));
  }

  if($row->{vendorcatalog1}) {
    $book->appendChild(childNode("booksellerCatalogue",$row->{vendorcatalog1}));
  }

  if($row->{description}) {
    $book->appendChild(childNode("description",$row->{description}));
  }

  if($row->{picture}) {
    my $pictures = $doc->createElement("pictureList");
    $pictures->appendChild(childNode("pictureURL","$_PICTURE_URL/$row->{picture}"));
    $book->appendChild($pictures);
  }

}
$dbc->disconnect;

if (postUpdate($doc->toString(0)) == 0) {
  print "Update successfully.\n";
  $doc->toFile("${_CACHE_DIR}/abebooks_daily_update.xml", 1);
  exit(0);
}

##
## EOF
##
