#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8
##################################################################################
# This file is part of the HJCMS Project
#
# Copyright (C) Juergen Heinemann http://www.hjcms.de, (C) 2007-2022
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
##################################################################################

set +x

_sourcepath="$(dirname "$(readlink -f $0)")"

test -e ${_sourcepath}/servercfg.bash || {
  echo "FATAL: Can not read Configuration"
  exit 1
}

. ${_sourcepath}/servercfg.bash

_sqlfile=${_scripting}/catalog/bf-export.sql

## Ausgabe Verzeichnis
_output_target=${_dest}/catalog

# Standard Ausgabename für Temporäre Daten in ~/.cache erstellen!
_tempdir=$HOME/.cache
_output="catalog-${_date}-ISO-8859-15.csv"

#####################################################################

if test ! -x /usr/bin/curl ; then
  echo "cUrl application is not installed!"
  exit 1
fi

if test ! -x /usr/bin/zip ; then
  echo "zip compression application is not installed!"
  exit 1
fi

if test ! -e ${_sqlfile} ; then
  echo "SQL File not found!"
  echo "- ${_sqlfile} "
  exit 1
fi

if test ! -d ${_output_target} ; then
  echo "Invalid output target!"
  exit 1
fi

__init_tempfile

__init_sql_enviroment

cd ${_output_target}

psql \
  --csv \
  --no-align \
  --echo-hidden \
  --tuples-only \
  --field-separator="`printf '\t'`" \
  --log-file=${_tempdir}/catalog-error.log \
  --output=${_tempdir}/catalog-export.temp < ${_sqlfile}

if test -s ${_tempdir}/catalog-export.temp ; then
  psql < ${_sqlfile} | head -n 1 | sed 's, ,,g' | awk '{print toupper($1)}' | sed 's/|/\t/g' > ${_tempdir}/catalog-export-utf8.csv
  sed 's,NOT_SET,,g' ${_tempdir}/catalog-export.temp >> ${_tempdir}/catalog-export-utf8.csv
  iconv -f UTF8 -t LATIN9 --output=${_tempdir}/${_output} ${_tempdir}/catalog-export-utf8.csv
  mv -b ${_tempdir}/${_output} ${_output_target}/
  mv -b ${_tempdir}/catalog-export-utf8.csv ${_output_target}/
  _lines="$(wc -l ${_output_target}/${_output} 2>/dev/null | cut -d' ' -f1)"
  echo "Katalog Ertellt am '`date`' mit '`echo "${_lines} - 1" | bc`' einträgen." >> ${_output_target}/catalog.log
  rm -f ${_output_target}/catalog.csv
  ln -sf ${_output} ${_output_target}/catalog.csv
  rm -f ${_tempdir}/catalog-export.temp
fi

_status=$?
if test ${_status} -gt 0 ; then
  echo "Script ending with errors"
  exit 1
fi

pushd ${_output_target}
  cp $(readlink catalog.csv) katalog.txt
  chmod 0644 katalog.txt
  rm -f *.zip
  zip -9 -o katalog.zip katalog.txt 1> /dev/null
  chmod 0644 katalog.zip
  rm -f katalog.txt
popd

if test -e ${_output_target}/katalog.zip ; then
  whsoft_url=https://www.buchfreund.de/verkaeufer/api/3fbe2f84-1ae2-419e-b5c4-fecabd6bac6c/upload-daten
  header_file=$HOME/.config/HJCMS/curl-upload-catalog.header
  curl --verbose -X POST ${whsoft_url} \
  --header $HOME/.config/HJCMS/curl-upload-catalog.header \
  --header 'Content-Type: multipart/form-data; boundary="upload"' \
  --header 'Content-Disposition: name=file; file=katalog.zip' \
  --output $HOME/.cache/catalog_ulpoad.json \
  --upload-file katalog.zip

fi

##
## EOF
##
