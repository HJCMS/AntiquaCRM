#!/usr/bin/env perl
# -*- coding: utf-8 -*-
# vim: set fileencoding=utf-8

=head1 NAME
##################################################################################
# This file is part of the HJCMS Project
#
# Copyright (C) Juergen Heinemann http://www.hjcms.de, (C) 2007-2022
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
##################################################################################

  antiqua-homebase3-export

=cut

use strict;
use warnings;
use POSIX qw(strftime);
use DBD::Pg;
use XML::DOM;

## Wird für Umlaute auf dem terminial benötigt
# use open ':utf8';
binmode STDOUT, ":utf8";

## User
my $_PG_USER = "heinemann";

my $dbc = DBI->connect("dbi:Pg:service=$_PG_USER",'', '',
  {AutoCommit => 0, RaiseError => 1, PrintError => 1, ReadOnly => 1});

my $_statement = "";
open(FH, '<:encoding(UTF-8)', "./catalog.sql") or die $!;
while(<FH>){
  $_statement .= $_;
}
close(FH);

my $xmldecl = new XML::DOM::XMLDecl;
$xmldecl->setVersion("1.0");
$xmldecl->setEncoding("UTF-8"); ## "ISO-8859-1"

my $doc = new XML::DOM::Document;
$doc->setXMLDecl($xmldecl);

my $root = $doc->createElement("BookListingInventory");
$root->setAttribute("xmlns","http://www.abebooks.com/BookListingXml");
$root->setAttribute("xsi:schemaLocation","http://www.abebooks.com/BookListingXml http://www.abebooks.com/docs/Schemas/BookInventory.xsd");
$root->setAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
$doc->appendChild($root);

my $query = $dbc->prepare($_statement);
if(!defined $query) {
  exit(1);
}

$query->execute();
my $ref = $query->fetchall_arrayref({});
print "ROWS: ", 0 + @{$ref}, "\n";
$query->finish;

sub initBookEntry {
  my $articleId = shift;

  my $book = $doc->createElement("BookListing");
  $book->setAttribute("deletestatus","false");
  $book->setAttribute("typecode","1001");

  my $type = $doc->createElement("productType");
  $type->appendChild($doc->createTextNode("Buch"));
  $book->appendChild($type);

  my $id = $doc->createElement("vendorListingid");
  $id->appendChild($doc->createTextNode($articleId));
  $book->appendChild($id);

  return $book;
};

sub simpleNode {
  my $name = shift;
  my $value = shift;
  my $child = $doc->createElement($name);
  $child->appendChild($doc->createTextNode($value));
  return $child;
};

foreach my $row (@{$ref}) {
  my $book = initBookEntry($row->{vendorlistingid});
  $root->appendChild($book);

  if($row->{title}) {
    $root->appendChild(simpleNode("title",$row->{title}));
  }

=begin
  <title>$row->{title}</title>
  <author>$row->{author}</author>
  <editor>$row->{author}</editor>
  <illustrator>$row->{author}</illustrator>
  <price currency="EUR">$row->{price}</price>
  <weight units="g">$row->{weight}</weight>
  <quantity amount="$row->{quantity}" limit="0"/>
  <edition editionNumber="$row->{edition}" editionText="$row->{edition}. Auflage" />
  <bookType></bookType>
  <publisher>
    <publisherName>$row->{publisher}</publisherName>
    <publishYear>$row->{year}</publishYear>
    <publishYearText>$row->{year}</publishYearText>
  </publisher>
  <description>$row->{description}</description>
  <subject>$row->{subject}</subject>
  <bindingText>$row->{bindingtext}</bindingText>
  <bookCondition>$row->{bookcondition}</bookCondition>
  <jacketCondition>$row->{jacketcondition}</jacketCondition>
  <binding>$row->{binding}</binding>
  <language>$row->{language}</language>
  <inscriptionType>$row->{inscriptiontype}</inscriptionType>
  <universalIdentifier isvalid="true" numberType="isbn" number="$row->{isbn}"/>
  <buyerSearchAttribute bsacode="38"/>
  <buyerSearchAttribute bsacode="36"/>
  <vendorCatalog id="1" name="$row->{vendorcatalog1}"/>
  <vendorCatalog id="2" name="$row->{vendorcatalog2}"/>
  <vendorCatalog id="3" name="$row->{vendorcatalog3}"/>
</BookListing>
EOT
=cut
}

$doc->printToFile("./homebase3.xml", -1);
$doc->dispose;

$dbc->disconnect;

print "cat homebase3.xml\n";

##
## EOF
##
